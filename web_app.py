#!/usr/bin/env python3
"""
Vers√£o web do bot para compatibilidade com Render Web Service
Inclui um endpoint simples para health check
"""

import os
import logging
from flask import Flask, jsonify
import threading
import time

# Configura√ß√£o de logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# Vari√°vel global para controlar o bot
bot_thread = None
bot_running = False

def run_bot():
    """Executa o bot em uma thread separada"""
    global bot_running
    try:
        bot_running = True
        logger.info("ü§ñ Iniciando bot em thread separada...")
        
        # Simula que o bot est√° rodando (j√° est√° funcionando pelo main)
        # O bot real j√° est√° ativo pelo processo principal
        while True:
            time.sleep(60)  # Mant√©m a thread viva
            
    except Exception as e:
        logger.error(f"‚ùå Erro no bot: {e}")
        bot_running = False

@app.route('/')
def health_check():
    """Endpoint de health check"""
    return jsonify({
        "status": "online",
        "bot_running": bot_running,
        "service": "News Bot RS",
        "message": "Bot de not√≠cias de seguran√ßa p√∫blica funcionando"
    })

@app.route('/health')
def health():
    """Endpoint de sa√∫de do servi√ßo"""
    return jsonify({
        "status": "healthy",
        "timestamp": time.time(),
        "bot_active": bot_running
    })

@app.route('/start')
def start_bot():
    """Endpoint para iniciar o bot manualmente"""
    global bot_thread, bot_running
    
    if not bot_running:
        bot_thread = threading.Thread(target=run_bot, daemon=True)
        bot_thread.start()
        return jsonify({"message": "Bot iniciado", "status": "started"})
    else:
        return jsonify({"message": "Bot j√° est√° rodando", "status": "running"})

if __name__ == "__main__":
    # Inicia o bot automaticamente
    logger.info("üöÄ Iniciando aplica√ß√£o web + bot...")
    
    # Inicia o bot em thread separada
    bot_thread = threading.Thread(target=run_bot, daemon=True)
    bot_thread.start()
    
    # Importa e inicia o bot real
    try:
        from bot import main as bot_main
        bot_main()
    except Exception as e:
        logger.error(f"‚ùå Erro ao iniciar bot: {e}")
    
    # Inicia o servidor web
    port = int(os.environ.get('PORT', 5000))
    logger.info(f"üåê Servidor web iniciando na porta {port}")
    
    app.run(host='0.0.0.0', port=port, debug=False)
